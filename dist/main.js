(()=>{"use strict";class e{constructor(e,t,a){this.title=e,this.description=t,this.deadline=a}static createTaskObject(){const t=document.getElementById("input-title").value,a=document.getElementById("input-description").value,s=document.getElementById("input-date").value;return new e(t,a,s)}static getFullDate(){const e=new Date,t=(new Date).getDate();return`${e.getFullYear()}-0${e.getMonth()+1}-${t<10?"0"+t:t}`}static isExpired(e){const t=e.split("-"),a=this.getFullDate().split("-");return t[1]<a[1]||t[1]===a[1]&&t[2]<a[2]}}class t{constructor(){this.tasks}static storeTaskObject(){document.getElementById("form").addEventListener("submit",(t=>{t.preventDefault(),this.tasks=this.getTaskArray(),this.tasks.push(e.createTaskObject()),localStorage.setItem("taskArray",JSON.stringify(this.tasks))}))}static deleteTaskObject(){window.addEventListener("click",(e=>{if("DELETE"===e.target.textContent){const t=e.target.parentNode.children[1].innerHTML.split(" ")[1];localStorage.setItem("taskArray",JSON.stringify(this.getTaskArray().filter((e=>e.description!==t)))),window.location.reload()}}))}static getTaskArray=()=>JSON.parse(localStorage.getItem("taskArray"))||[]}class a{static createCardInnerHTML(t,a,s){const r=document.getElementById("task-display-area"),i=document.createElement("div");i.innerHTML=`\n    <div id="card">\n      <span class="card-item card-title">Title: ${t}</span>\n      <span class="card-item card-description">Description: ${a}</span>\n      <span class="card-item card-deadline">Deadline:\n       ${s.split("-").reverse().join("/")}${e.isExpired(s)?" (Expired)":""}</span>\n    <button class='card-button-delete'>DELETE</button>\n      </div>`,r.appendChild(i)}static createTaskCard(){this.clearTaskDisplayArea(),!t.getTaskArray()||t.getTaskArray().length>12||t.getTaskArray().forEach((e=>this.createCardInnerHTML(e.title,e.description,e.deadline)))}static clearTaskDisplayArea(){document.getElementById("task-display-area").textContent=""}static setMainTitle(e){document.getElementById("main-title").textContent=e}static createCardOnPageLoad=()=>this.createTaskCard();static createCardOnSubmit(){document.getElementById("form").addEventListener("submit",(e=>{e.preventDefault(),this.setMainTitle("All Tasks"),this.createTaskCard()}))}static createAllTaskCards(){document.getElementById("all-tasks").addEventListener("click",(()=>{this.setMainTitle("All Tasks"),this.createTaskCard()}))}static createTodayTaskCards(){document.getElementById("today-tasks").addEventListener("click",(()=>{this.clearTaskDisplayArea(),this.setMainTitle("Today's Tasks"),t.getTaskArray().forEach((t=>{t.deadline===e.getFullDate()&&this.createCardInnerHTML(t.title,t.description,t.deadline)}))}))}static createUpcomingTaskCards(){document.getElementById("upcoming-tasks").addEventListener("click",(()=>{this.clearTaskDisplayArea(),this.setMainTitle("Upcoming Tasks"),t.getTaskArray().forEach((t=>{const a=t.deadline.split("-"),s=e.getFullDate().split("-"),r=a[1],i=s[1],n=a[2],d=s[2];(r-i==0&&n>d&&n-d<=7||r-i==1&&n<5)&&this.createCardInnerHTML(t.title,t.description,t.deadline)}))}))}}class s{static toggleModal(){const e=document.getElementById("header"),t=document.getElementById("main-title"),a=document.getElementById("task-display-area"),s=document.getElementById("modal"),r=document.getElementById("form"),i=document.getElementById("add-new-task-group");function n(){s.style.display="none",e.style.filter="blur(0px)",a.style.filter="blur(0px)",t.style.filter="blur(0px)",i.style.filter="blur(0px)"}i.addEventListener("click",(()=>(s.style.display="block",e.style.filter="blur(1px)",a.style.filter="blur(1px)",t.style.filter="blur(1px)",void(i.style.filter="blur(1px)")))),r.addEventListener("submit",(e=>{e.preventDefault(),n()})),document.addEventListener("keydown",(e=>{"Escape"===e.key&&n()}))}static resetModalForm(){const e=document.getElementById("form");e.addEventListener("submit",(()=>{e.reset()})),document.addEventListener("keydown",(t=>{"Escape"===t.key&&e.reset()}))}static createToDoCard(){a.createCardOnPageLoad(),a.createCardOnSubmit(),a.createAllTaskCards(),a.createTodayTaskCards(),a.createUpcomingTaskCards()}}t.storeTaskObject(),t.deleteTaskObject(),s.createToDoCard(),s.toggleModal(),s.resetModalForm()})();